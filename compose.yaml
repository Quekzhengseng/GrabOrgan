volumes:
  rabbitmq_data:
    name: grabOrgan_rabbitmq_data

networks:
  grabOrgan-net:
    driver: bridge
    name: grabOrgan-net

services:
  rabbitmq:
    image: rabbitmq:3-management
    hostname: grabOrgan-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./common/rabbitmq_data:/var/lib/rabbitmq
    networks:
      - grabOrgan-net
  delivery_info:
    build:
      context: atomic/Delivery/.
      dockerfile: Dockerfile.deliveryinfo
    image: GrabOrgan/deliveryinfo:1.0
    volumes:
      - ./secrets/delivery/delivery_Key.json:/usr/src/app/delivery_Key.json:ro
    environment:
      - DELIVERY_DB_KEY=/usr/src/app/delivery_Key.json
    # restart: always
    container_name: delivery_service
    ports:
      - "5000:5002"
    networks:
      - grabOrgan-net
  donor:
    build:
      context: atomic/Donor/.
      dockerfile: Dockerfile.donor
    image: GrabOrgan/donor:1.0
    volumes:
      - ./secrets/Donor/Donor_Key.json:/usr/src/app/Donor_Key.json:ro
    environment:
      - DONOR_DB_KEY=/usr/src/app/Donor_Key.json
    # restart: always
    container_name: donor_service
    ports:
      - "5001:5002"
    networks:
      - grabOrgan-net

  driverInfo:
    build:
      context: atomic/DriverInfo/.
      dockerfile: Dockerfile.driverInfo
    image: GrabOrgan/driverinfo:1.0
    volumes:
      - ./secrets/driverInfo/driver_Key.json:/usr/src/app/driverInfo_Key.json:ro
    environment:
      - DRIVERINFO_DB_KEY=/usr/src/app/driverInfo_Key.json
    # restart: always
    container_name: driverInfo_service
    ports:
      - "5002:5020"
    networks:
      - grabOrgan-net

  geoalgo:
    build:
      context: atomic/GeoAlgo/.
      dockerfile: dockerfile.geoalgo
    image: GrabOrgan/geoalgo:1.0
    # restart: always
    container_name: geoalgo_service
    ports:
      - "5003:5000"
    networks:
      - grabOrgan-net

  lab_report_service:
    build:
      context: atomic/LabInfo/.
      dockerfile: Dockerfile.lab_report
    image: GrabOrgan/labinfo:1.0
    volumes:
      - ./secrets/LabInfo/Lab_Info_Key.json:/usr/src/app/Lab_Info_Key.json:ro
    environment:
      - LABINFO_DB_KEY=/usr/src/app/Lab_Info_Key.json
    # restart: always
    container_name: lab_info_service
    ports:
      - "5004:5003"
    networks:
      - grabOrgan-net

  organ:
    build:
      context: atomic/Organ/.
      dockerfile: Dockerfile.organ
    image: graborgan/organ:1.0
    volumes:
      - ./secrets/organ/organ_Key.json:/usr/src/app/secrets/organ_Key.json:ro
    environment:
      - ORGAN_DB_KEY=/usr/src/app/secrets/organ_Key.json
    ports:
      - "5005:5009"
    container_name: organ_service
    # restart: always
    networks:
      - grabOrgan-net

  personalData:
    build:
      context: atomic/PersonalData/.
      dockerfile: Dockerfile.personal.data
    image: GrabOrgan/personaldata:1.0
    volumes:
      - ./secrets/PersonalData/PersonalData_Key.json:/usr/src/app/PersonalData_Key.json:ro
    environment:
      - PERSONAL_DATA_DB_KEY=/usr/src/app/PersonalData_Key.json
    # restart: always
    container_name: personal_data_service
    ports:
      - "5006:5008"
    networks:
      - grabOrgan-net

  pseudonym:
    build:
      context: atomic/Pseudonym/.
      dockerfile: Dockerfile.pseudonym
    image: GrabOrgan/pseudonym:1.0
    # restart: always
    container_name: pseudonym_service
    ports:
      - "5007:5007"
    networks:
      - grabOrgan-net

  recipient:
    build:
      context: atomic/Recipient
      dockerfile: Dockerfile.recipient
    image: graborgan/recipient:1.0
    volumes:
      - ./secrets/recipient/recipient_Key.json:/usr/src/app/secrets/recipient_Key.json:ro
    environment:
      - RECIPIENT_DB_KEY=/usr/src/app/secrets/recipient_Key.json
    ports:
      - "5008:5001"
    container_name: recipient_service
    # restart: always
    networks:
      - grabOrgan-net

  order:
    build:
      context: atomic/Order
      dockerfile: Dockerfile.order
    image: GrabOrgan/order:1.0
    volumes:
      - ./secrets/order/Order_Key.json:/usr/src/app/Order_Key.json:ro
    environment:
      - ORDER_DB_KEY=/usr/src/app/Order_Key.json
    # restart: always
    container_name: order_service
    ports:
      - "5009:5006"
    networks:
      - grabOrgan-net
