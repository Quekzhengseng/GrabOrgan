volumes:
  rabbitmq_data:
    name: grabOrgan_rabbitmq_data

networks:
  grabOrgan-net:
    driver: bridge
    name: grabOrgan-net

services:
  rabbitmq:
    image: rabbitmq:3-management
    hostname: grabOrgan-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - grabOrgan-net
    # environment:
    #   - RABBITMQ_DEFAULT_USER=guest
    #   - RABBITMQ_DEFAULT_PASS=guest
  activity_log:
    build:
      context: .
      dockerfile: atomic/ActivityLog/Dockerfile.activity.log
    image: GrabOrgan/activity_log:1.0

    ports:
      - "5001:5001"
    environment:
      - AMQP_URL=amqp://rabbitmq:5672/
      - PYTHONPATH=/app:/app/common
      - rabbit_host=rabbitmq # The name of the RabbitMQ container defined in the RabbitMQ compose file
      - rabbit_port=5672
      - exchange_name=activity_log_exchange
      - exchange_type=topic
      - queue_name=activity_log_queue
      - PYTHONUNBUFFERED=1
    command: ["python", "activity_log.py"]
    depends_on:
      - rabbitmq
    restart: always
    networks:
      - grabOrgan-net
  delivery_info:
    build:
      context: atomic/Delivery/.
      dockerfile: Dockerfile.deliveryinfo
    image: GrabOrgan/deliveryinfo:1.0
    volumes:
      - ./secrets/delivery/delivery_Key.json:/usr/src/app/delivery_Key.json:ro
    environment:
      - DELIVERY_DB_KEY=/usr/src/app/delivery_Key.json
    container_name: delivery_service
    ports:
      - "5002:5002"
    networks:
      - grabOrgan-net
  donor:
    build:
      context: atomic/Donor/.
      dockerfile: Dockerfile.donor
    image: GrabOrgan/donor:1.0
    volumes:
      - ./secrets/Donor/Donor_Key.json:/usr/src/app/Donor_Key.json:ro
    environment:
      - DONOR_DB_KEY=/usr/src/app/Donor_Key.json
    container_name: donor_service
    ports:
      - "5003:5003"
    networks:
      - grabOrgan-net

  driverInfo:
    build:
      context: atomic/DriverInfo/.
      dockerfile: Dockerfile.driverInfo
    image: GrabOrgan/driverinfo:1.0
    volumes:
      - ./secrets/driverInfo/driver_Key.json:/usr/src/app/driverInfo_Key.json:ro
    environment:
      - DRIVERINFO_DB_KEY=/usr/src/app/driverInfo_Key.json
    container_name: driverInfo_service
    ports:
      - "5004:5004"
    networks:
      - grabOrgan-net
  error:
    build:
      context: .
      dockerfile: atomic/Error/Dockerfile.error
    image: GrabOrgan/error:1.0

    container_name: error_service
    ports:
      - "5005:5005"
    environment:
      - AMQP_URL=amqp://rabbitmq:5672/
      - PYTHONPATH=/app:/app/common
      - rabbit_host=rabbitmq # The name of the RabbitMQ container defined in the RabbitMQ compose file
      - rabbit_port=5672
      - exchange_name=error_handling_exchange
      - exchange_type=topic
      - queue_name=error_queue
      - PYTHONUNBUFFERED=1
    command: ["python", "error.py"]
    depends_on:
      - rabbitmq
    restart: always
    networks:
      - grabOrgan-net

  geoalgo:
    build:
      context: atomic/GeoAlgo/.
      dockerfile: dockerfile.geoalgo
    image: GrabOrgan/geoalgo:1.0
    container_name: geoalgo_service
    ports:
      - "5006:5006"
    networks:
      - grabOrgan-net

  labInfo:
    build:
      context: atomic/LabInfo/.
      dockerfile: Dockerfile.lab_report
    image: GrabOrgan/labinfo:1.0
    volumes:
      - ./secrets/LabInfo/Lab_Info_Key.json:/usr/src/app/Lab_Info_Key.json:ro
    environment:
      - LABINFO_DB_KEY=/usr/src/app/Lab_Info_Key.json
    container_name: lab_info_service
    ports:
      - "5007:5007"
    networks:
      - grabOrgan-net
  match:
    build:
      context: atomic/Match/.
      dockerfile: Dockerfile.match
    image: GrabOrgan/match:1.0
    volumes:
      - ./secrets/Match/Match_Key.json:/usr/src/app/Match_Key.json:ro
    environment:
      - MATCH_DB_KEY=/usr/src/app/Match_Key.json
    container_name: match_service
    ports:
      - "5008:5008"
    networks:
      - grabOrgan-net

  order:
    build:
      context: atomic/Order/.
      dockerfile: Dockerfile.order
    image: GrabOrgan/order:1.0
    volumes:
      - ./secrets/order/Order_Key.json:/usr/src/app/Order_Key.json:ro
    environment:
      - ORDER_DB_KEY=/usr/src/app/Order_Key.json
    container_name: order_service
    ports:
      - "5009:5009"
    networks:
      - grabOrgan-net

  organ:
    build:
      context: atomic/Organ/.
      dockerfile: Dockerfile.organ
    image: GrabOrgan/organ:1.0
    volumes:
      - ./secrets/organ/organ_Key.json:/usr/src/app/secrets/organ_Key.json:ro
    environment:
      - ORGAN_DB_KEY=/usr/src/app/secrets/organ_Key.json
    ports:
      - "5010:5010"
    container_name: organ_service
    networks:
      - grabOrgan-net

  personalData:
    build:
      context: atomic/PersonalData/.
      dockerfile: Dockerfile.personal.data
    image: GrabOrgan/personaldata:1.0
    volumes:
      - ./secrets/PersonalData/PersonalData_Key.json:/usr/src/app/PersonalData_Key.json:ro
    environment:
      - PERSONAL_DATA_DB_KEY=/usr/src/app/PersonalData_Key.json
    container_name: personal_data_service
    ports:
      - "5011:5011"
    networks:
      - grabOrgan-net

  pseudonym:
    build:
      context: atomic/Pseudonym/.
      dockerfile: Dockerfile.pseudonym
    image: GrabOrgan/pseudonym:1.0
    container_name: pseudonym_service
    ports:
      - "5012:5012"
    networks:
      - grabOrgan-net

  recipient:
    build:
      context: atomic/Recipient/.
      dockerfile: Dockerfile.recipient
    image: GrabOrgan/recipient:1.0
    volumes:
      - ./secrets/recipient/recipient_Key.json:/usr/src/app/secrets/recipient_Key.json:ro
    environment:
      - RECIPIENT_DB_KEY=/usr/src/app/secrets/recipient_Key.json
    ports:
      - "5013:5013"
    container_name: recipient_service
    networks:
      - grabOrgan-net
  match_organ:
    build:
      context: .
      dockerfile: composite/MatchOrgan/Dockerfile.match.organ
    image: GrabOrgan/match_organ:1.0
    environment:
      - AMQP_URL=amqp://rabbitmq:5672/
      - rabbit_host=rabbitmq # The name of the RabbitMQ container defined in the RabbitMQ compose file
      - rabbit_port=5672
      - RECIPIENT_URL=http://recipient:5013/recipient
      - DONOR_URL=http://donor:5003/donor
      - ORGAN_URL=http://organ:5010/organ
      - MATCH_URL=http://match:5008/matches
      - PYTHONPATH=/app:/app/common # Equivalent to export PYTHONPATH
      - PYTHONUNBUFFERED=1
    ports:
      - "5020:5020"
    depends_on:
      - rabbitmq
      - activity_log
      - error
      - recipient
      - donor
      - match
      - organ
    container_name: match_organ_service
    networks:
      - grabOrgan-net
    command: ["python", "match_organ.py"]
